name: Docker CD

# main 브랜치로 push될 때만 실행. (pull request에서는 실행되지 않도록)
on:
  workflow_run:
    workflows: ["Java CI with Gradle"] # ci.yml 파일의 'name'을 정확히 명시
    types:
      - completed # 'Java CI with Gradle' 워크플로우가 완료될 때 트리거
    branches:
      - main # main 브랜치에서 완료되었을 때만 실행

jobs:
  docker-build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write # Docker Hub 푸시를 위한 권한
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 이전 Job에서 업로드된 아티팩트를 다운로드.
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: my-spring-app-artifact
          path: contents/cicd.demo/build/libs/ # 다운로드할 경로를 지정.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Make gradlew executable
        run: chmod +x gradlew
        working-directory: contents/cicd.demo

      - name: Build Docker image
        run: docker build -t my-spring-app .
        working-directory: contents/cicd.demo

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker image
        run: docker tag my-spring-app ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest

      - name: Push to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest
