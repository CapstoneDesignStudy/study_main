name: Docker CD

# main 브랜치로 push될 때만 실행. (pull request에서는 실행되지 않도록)
on:
  push:
    branches: ["main"]

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write # Docker Hub 푸시를 위한 권한

    # 이 Job은 'build' Job이 성공적으로 완료되어야만 실행.
    # 'build' Job은 ci.yml에 정의되어 있으므로, 이 두 워크플로우가 서로 종속성을 가짐.

    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 이전 Job에서 업로드된 아티팩트를 다운로드.
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: my-spring-app-artifact
          path: contents/cicd.demo/build/libs/ # 다운로드할 경로를 지정.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Make gradlew executable
        run: chmod +x gradlew
        working-directory: contents/cicd.demo

      - name: Build Docker image
        run: docker build -t my-spring-app .
        working-directory: contents/cicd.demo

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker image
        run: docker tag my-spring-app ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest

      - name: Push to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-spring-app:latest
